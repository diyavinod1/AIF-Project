import React, { useState, useEffect } from "react";
import { ResumeAnalysis } from "@/entities/ResumeAnalysis";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Linkedin, Copy, CheckCircle, Users, Eye, TrendingUp } from "lucide-react";
import { Alert, AlertDescription } from "@/components/ui/alert";

export default function LinkedInOptimizerPage() {
  const [analyses, setAnalyses] = useState([]);
  const [selectedAnalysis, setSelectedAnalysis] = useState(null);
  const [copiedText, setCopiedText] = useState("");
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    loadAnalyses();
  }, []);

  const loadAnalyses = async () => {
    try {
      const data = await ResumeAnalysis.list("-created_date");
      const completed = data.filter(a => a.linkedin_headline && a.linkedin_about);
      setAnalyses(completed);
      if (completed.length > 0) {
        setSelectedAnalysis(completed[0]);
      }
    } catch (error) {
      console.error("Error loading analyses:", error);
    } finally {
      setIsLoading(false);
    }
  };

  const copyToClipboard = (text, type) => {
    navigator.clipboard.writeText(text).then(() => {
      setCopiedText(type);
      setTimeout(() => setCopiedText(""), 2000);
    });
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-slate-600">Loading LinkedIn content...</p>
        </div>
      </div>
    );
  }

  if (analyses.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6 flex items-center justify-center">
        <Card className="max-w-md">
          <CardContent className="p-8 text-center">
            <Linkedin className="w-12 h-12 mx-auto mb-4 text-slate-400" />
            <h3 className="text-lg font-semibold text-slate-900 mb-2">No LinkedIn Content Available</h3>
            <p className="text-slate-600 mb-6">Complete a resume analysis first to generate LinkedIn content.</p>
            <Button 
              onClick={() => window.location.href = '/resume-input'}
              className="bg-gradient-to-r from-blue-600 to-blue-700"
            >
              Start Analysis
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center gap-3 mb-4">
            <Linkedin className="w-8 h-8 text-blue-600" />
            <h1 className="text-3xl font-bold text-slate-900">LinkedIn Profile Optimizer</h1>
          </div>
          <p className="text-slate-600 text-lg">
            Professional LinkedIn content optimized for your target role and industry
          </p>
        </div>

        <div className="grid lg:grid-cols-4 gap-6">
          {/* Analysis Selection Sidebar */}
          <div className="lg:col-span-1">
            <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
              <CardHeader className="border-b border-slate-100">
                <CardTitle className="text-lg">Your Profiles</CardTitle>
              </CardHeader>
              <CardContent className="p-4 space-y-3">
                {analyses.map((analysis) => (
                  <div
                    key={analysis.id}
                    onClick={() => setSelectedAnalysis(analysis)}
                    className={`p-3 rounded-lg cursor-pointer transition-all duration-200 ${
                      selectedAnalysis?.id === analysis.id
                        ? 'bg-blue-50 border border-blue-200'
                        : 'hover:bg-slate-50 border border-slate-200'
                    }`}
                  >
                    <div className="font-medium text-sm text-slate-900">{analysis.candidate_name}</div>
                    <div className="text-xs text-slate-600 mt-1">{analysis.target_role}</div>
                    <Badge variant="outline" className="mt-2 text-xs">
                      Score: {analysis.ats_score}
                    </Badge>
                  </div>
                ))}
              </CardContent>
            </Card>
          </div>

          {/* LinkedIn Content */}
          <div className="lg:col-span-3 space-y-6">
            {selectedAnalysis && (
              <>
                {/* Profile Overview */}
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
                  <CardHeader className="border-b border-slate-100">
                    <div className="flex items-center justify-between">
                      <CardTitle className="flex items-center gap-3">
                        <Users className="w-5 h-5 text-blue-600" />
                        Profile Overview
                      </CardTitle>
                      <Badge className="bg-blue-100 text-blue-800">
                        {selectedAnalysis.target_role}
                      </Badge>
                    </div>
                  </CardHeader>
                  <CardContent className="p-6">
                    <div className="grid md:grid-cols-3 gap-6">
                      <div className="text-center">
                        <TrendingUp className="w-8 h-8 mx-auto mb-2 text-green-600" />
                        <div className="text-2xl font-bold text-slate-900">{selectedAnalysis.ats_score}</div>
                        <div className="text-sm text-slate-600">ATS Score</div>
                      </div>
                      <div className="text-center">
                        <Eye className="w-8 h-8 mx-auto mb-2 text-blue-600" />
                        <div className="text-2xl font-bold text-slate-900">
                          {selectedAnalysis.linkedin_headline?.length || 0}
                        </div>
                        <div className="text-sm text-slate-600">Headline Chars</div>
                      </div>
                      <div className="text-center">
                        <Linkedin className="w-8 h-8 mx-auto mb-2 text-purple-600" />
                        <div className="text-2xl font-bold text-slate-900">Optimized</div>
                        <div className="text-sm text-slate-600">Content Ready</div>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                {/* LinkedIn Headline */}
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
                  <CardHeader className="border-b border-slate-100">
                    <div className="flex items-center justify-between">
                      <CardTitle className="flex items-center gap-3">
                        <Linkedin className="w-5 h-5 text-blue-600" />
                        LinkedIn Headline
                      </CardTitle>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() => copyToClipboard(selectedAnalysis.linkedin_headline, "headline")}
                        className={`${copiedText === 'headline' ? 'bg-green-50 border-green-200' : ''}`}
                      >
                        {copiedText === "headline" ? (
                          <>
                            <CheckCircle className="w-4 h-4 mr-2 text-green-600" />
                            Copied!
                          </>
                        ) : (
                          <>
                            <Copy className="w-4 h-4 mr-2" />
                            Copy
                          </>
                        )}
                      </Button>
                    </div>
                  </CardHeader>
                  <CardContent className="p-6">
                    <div className="bg-slate-50 rounded-lg p-4 mb-4">
                      <p className="text-slate-800 leading-relaxed font-medium">
                        {selectedAnalysis.linkedin_headline}
                      </p>
                    </div>
                    <div className="flex justify-between items-center text-sm">
                      <span className="text-slate-600">Character count:</span>
                      <Badge variant="outline" className={
                        (selectedAnalysis.linkedin_headline?.length || 0) <= 220 
                          ? "border-green-200 text-green-700" 
                          : "border-red-200 text-red-700"
                      }>
                        {selectedAnalysis.linkedin_headline?.length || 0}/220
                      </Badge>
                    </div>
                  </CardContent>
                </Card>

                {/* LinkedIn About Section */}
                <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
                  <CardHeader className="border-b border-slate-100">
                    <div className="flex items-center justify-between">
                      <CardTitle className="flex items-center gap-3">
                        <Linkedin className="w-5 h-5 text-blue-600" />
                        LinkedIn About Section
                      </CardTitle>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() => copyToClipboard(selectedAnalysis.linkedin_about, "about")}
                        className={`${copiedText === 'about' ? 'bg-green-50 border-green-200' : ''}`}
                      >
                        {copiedText === "about" ? (
                          <>
                            <CheckCircle className="w-4 h-4 mr-2 text-green-600" />
                            Copied!
                          </>
                        ) : (
                          <>
                            <Copy className="w-4 h-4 mr-2" />
                            Copy
                          </>
                        )}
                      </Button>
                    </div>
                  </CardHeader>
                  <CardContent className="p-6">
                    <div className="bg-slate-50 rounded-lg p-4 max-h-80 overflow-y-auto">
                      <pre className="whitespace-pre-wrap text-slate-800 leading-relaxed font-sans">
                        {selectedAnalysis.linkedin_about}
                      </pre>
                    </div>
                  </CardContent>
                </Card>

                {/* Optimization Tips */}
                <Card className="bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200">
                  <CardHeader>
                    <CardTitle className="text-blue-900">LinkedIn Optimization Tips</CardTitle>
                  </CardHeader>
                  <CardContent className="p-6">
                    <div className="grid md:grid-cols-2 gap-4 text-sm text-blue-800">
                      <div className="space-y-2">
                        <h4 className="font-semibold">Headline Best Practices:</h4>
                        <ul className="space-y-1 text-blue-700">
                          <li>• Include target role and key skills</li>
                          <li>• Use industry keywords</li>
                          <li>• Keep under 220 characters</li>
                          <li>• Add value proposition</li>
                        </ul>
                      </div>
                      <div className="space-y-2">
                        <h4 className="font-semibold">About Section Tips:</h4>
                        <ul className="space-y-1 text-blue-700">
                          <li>• Start with a strong hook</li>
                          <li>• Include specific achievements</li>
                          <li>• Use bullet points for readability</li>
                          <li>• End with a call-to-action</li>
                        </ul>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}
