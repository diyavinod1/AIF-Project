import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { AlertTriangle, CheckCircle } from "lucide-react";

export default function RedFlagsTable({ flags }) {
  if (!flags || flags.length === 0) {
    return (
      <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
        <CardHeader className="border-b border-slate-100">
          <CardTitle className="flex items-center gap-3 text-slate-900">
            <CheckCircle className="w-5 h-5 text-green-600" />
            Resume Quality Check
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <div className="text-center py-6">
            <CheckCircle className="w-12 h-12 mx-auto mb-4 text-green-600" />
            <h3 className="text-lg font-semibold text-slate-900 mb-2">Great Work!</h3>
            <p className="text-slate-600">No major red flags detected in your resume.</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  const getSeverityColor = (issue) => {
    const severityMap = {
      'missing dates': 'high',
      'vague bullets': 'medium',
      'no metrics': 'high',
      'formatting issues': 'low',
      'passive voice': 'medium',
      'first person': 'low',
      'buzzwords': 'medium'
    };

    const severity = severityMap[issue?.toLowerCase()] || 'medium';
    
    switch (severity) {
      case 'high':
        return 'bg-red-100 text-red-800 border-red-200';
      case 'medium':
        return 'bg-yellow-100 text-yellow-800 border-yellow-200';
      case 'low':
        return 'bg-blue-100 text-blue-800 border-blue-200';
      default:
        return 'bg-gray-100 text-gray-800 border-gray-200';
    }
  };

  return (
    <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
      <CardHeader className="border-b border-slate-100">
        <CardTitle className="flex items-center gap-3 text-slate-900">
          <AlertTriangle className="w-5 h-5 text-amber-600" />
          Issues to Address ({flags.length})
        </CardTitle>
      </CardHeader>
      <CardContent className="p-6 space-y-4">
        {flags.map((flag, index) => (
          <Alert key={index} className="border-l-4 border-l-amber-400">
            <AlertTriangle className="w-4 h-4 text-amber-600" />
            <div className="flex-1">
              <div className="flex items-start justify-between mb-2">
                <div className="flex items-center gap-3">
                  <span className="font-semibold text-slate-900">{flag.issue}</span>
                  <Badge className={`${getSeverityColor(flag.issue)} border text-xs`}>
                    Priority
                  </Badge>
                </div>
              </div>
              <AlertDescription className="text-slate-600 mb-3">
                {flag.description}
              </AlertDescription>
              <div className="bg-green-50 border border-green-200 rounded-lg p-3">
                <div className="flex items-start gap-2">
                  <CheckCircle className="w-4 h-4 text-green-600 mt-0.5 flex-shrink-0" />
                  <div>
                    <span className="text-sm font-medium text-green-800">Recommended Fix:</span>
                    <p className="text-sm text-green-700 mt-1">{flag.fix}</p>
                  </div>
                </div>
              </div>
            </div>
          </Alert>
        ))}
      </CardContent>
    </Card>
  );
}
